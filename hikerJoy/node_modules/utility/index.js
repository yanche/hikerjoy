
require('./extension/obj_ext.js');
require('./extension/array_ext.js');
require('./extension/regexp_ext.js');
require('./extension/date_ext.js');
var objectId = require('mongodb').ObjectID;

exports.httpHelper = require('./helper/http_helper.js').httpHelper;

var parseJSON = function (str) {
    try {
        var ret = JSON.parse(str);
        return ret;
    }
    catch (err) {
        console.log('failed to parse json: ' + str + '. err: ' + err);
        return null;
    };
};

var getRandomWithTimestamp = function () {
    return getTimestamp().toString() + getRandom().toString();
};

// 0 -- 10000000000
var getRandom = function () {
    return Math.round(Math.random() * 10000000000).toString(); // 0 -- 10000000000
};

var getTimestamp = function () {
    return new Date().getTime().toString();
};

//input: image base64 string
//output: {'data':, 'type'}
var getImagePostFormat = function (imgData) {
    var ret = { 'data': getImageDataFromBase64String(imgData), 'type': getContentTypeFromBase64String(imgData) };
    return ret;
}

var getContentTypeFromBase64String = function (base64) {
    if (!base64 || (typeof base64) !== 'string' || base64.slice(0, 5) != 'data:')
        return '';

    var start = base64.indexOf(':');
    var end = base64.indexOf(';');
    if (start == -1 || end == -1 || start >= end)
        return '';

    return base64.slice(start + 1, end);
}

var getImageDataFromBase64String = function (base64) {
    if (!base64 || (typeof base64) !== 'string' || base64.slice(0, 5) != 'data:')
        return '';

    return base64.slice(base64.indexOf(',') + 1);
}

var tryConvert2ObjId = function (input) {
    try {
        if(!input)
            return null;
        return new objectId(input);
    }
    catch (err) {
        return null;
    }
};

var tryConvert2Date = function (input) {
    try {
        if(!input)
            return null;
        var date = new Date(input);
        if(isNaN(date.getTime()))
            return null;
        else
            return date;
    }
    catch (err) {
        return null;
    }
};

var dateEquals = function (date1, date2) {
    date1 = new Date(date1);
    date2 = new Date(date2);
    var time1 = date1.getTime();
    var time2 = date2.getTime();
    return !isNaN(time1) && !isNaN(time2) && time1 == time2;
};

var expectedError = function (ret) {
    var err = new Error();
    err.expected = true;
    err.hikerJoy_ret = ret;
    return err;
};

exports.parseJSON = parseJSON;
exports.getRandomWithTimestamp = getRandomWithTimestamp;
exports.getTimestamp = getTimestamp;
exports.getRandom = getRandom;
exports.getImagePostFormat = getImagePostFormat;
exports.tryConvert2ObjId = tryConvert2ObjId;
exports.tryConvert2Date = tryConvert2Date;
exports.dateEquals = dateEquals;
exports.expectedError = expectedError;

var sortExt = require('./sort/index.js');
exports.sortByDateAsc = sortExt.sortByDateAsc;
exports.sortByDateDesc = sortExt.sortByDateDesc;
