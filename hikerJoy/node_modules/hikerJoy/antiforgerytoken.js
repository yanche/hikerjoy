var crypto = require('crypto');
var config = require('hikerJoy').config;

var plainTextFormat = 'utf8';
var encryptFormat = 'hex';
var algorithm = 'des';

//input: pack.req.session.token, {'key':, 'value': }
var generateToken = function (key) {
    var timestamp = (new Date()).getTime().toString();
    var msg = timestamp + key.value;
    var enc = crypto.createCipher(algorithm, key.key);
    var ret = enc.update(msg, plainTextFormat, encryptFormat);
    ret += enc.final(encryptFormat);
    return ret;
};

//input: {'key': pack.req.session.token, 'token': token(string) in request }
var validateToken = function (token, key) {
    try {
        var dec = crypto.createDecipher(algorithm, key.key);
        var msg = dec.update(token, encryptFormat, plainTextFormat);
        msg += dec.final(plainTextFormat);
        var tokenLen = msg.length - key.value.length;
        var timestamp = Number(msg.slice(0, tokenLen));
        var tokenVal = msg.slice(tokenLen, msg.length);
        var tokenCreatedOn = new Date(timestamp);
        return tokenVal === key.value && !isNaN(tokenCreatedOn.getTime()) && tokenCreatedOn.setMinutes(tokenCreatedOn.getMinutes() + config.tokenExpMin) > new Date();
    }
    catch (err) {
        console.log(err.stack);
        return false;
    }
};

exports.generateToken = generateToken;
exports.validateToken = validateToken;
